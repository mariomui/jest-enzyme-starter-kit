{
  "name": "jest-enzyme-starter-kit",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "jest",
    "test:update": "jest -u",
    "dev": "webpack-dev-server",
    "watch": "webpack --watch"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "path": "^0.12.7",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "webpack": "^4.28.1"
  },
  "jest": {
    "snapshotSerializers": [
      "enzyme-to-json/serializer"
    ]
  },
  "devDependencies": {
    >"@babel/core": "^7.2.2",
    >"@babel/preset-env": "^7.2.3",
    >"@babel/preset-react": "^7.0.0",

    o=>"babel-core": "^7.0.0-0",
    o=>"babel-jest": "^23.6.0",
      These two solved: Requires Babel "^7.0.0-0", but was loaded with "6.26.3".  "@babel/core" or "babel-core" to see what is calling Babel. (Error While processing preset:
      @babel/preset-react)
    
    "babel-eslint": "^10.0.1",
      babel eslint will be useful later on when i want
      to use custom parsers to do flow.
      But right now i can use the defaults to make vscode understand spec.jsx files depending on my env. Writing the eslintrcjson config took care of jest test file syntax errors.
    
    >"babel-loader": "^8.0.4",
    
    p=>"babel-plugin-transform-es2015-modules-commonjs": "^6.26.2",
      This solved the import errors jest was giving me.
      had to config babel to transpile modules to the right things.
    
    >"enzyme": "^3.8.0",

    >> "enzyme-adapter-react-16": "^1.7.1",
    >> "enzyme-to-json": "^3.3.5",
    
    >"eslint": "^5.10.0",
      >"eslint-config-airbnb": "^17.1.0",
      >"eslint-plugin-import": "^2.14.0",
      >"eslint-plugin-jsx-a11y": "^6.1.2",
      >"eslint-plugin-react": "^7.11.1",
    
    > "jest": "^23.6.0",
    "jest-enzyme": "^7.0.1",
    "jest-resolve": "^23.6.0",
    "jest-serializer-enzyme": "^1.0.0",
    
    > "webpack-cli": "^3.1.2",
    >"webpack-dev-server": "^3.1.13"
  }
}